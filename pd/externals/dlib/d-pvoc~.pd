#N canvas 422 94 893 677 12;
#X floatatom 494 315 5 0 0 0 - #0-transpo-set -;
#X floatatom 167 383 3 0 0 0 - #0-speed-set -;
#X floatatom 55 385 7 0 0 0 - #0-location-set -;
#X text 164 364 hundredths;
#X text 493 294 in cents;
#X text 405 359 normal;
#N canvas 0 110 569 458 hann-window 0;
#N canvas 0 0 450 300 graph1 0;
#X array \$0-hann 2048 float 0;
#X coords 0 1 2047 0 300 100 1;
#X restore 82 311 graph;
#X obj 378 165 osc~;
#X obj 378 190 *~ -0.5;
#X obj 378 214 +~ 0.5;
#X obj 331 247 tabwrite~ \$0-hann;
#X obj 38 173 /;
#X obj 127 142 samplerate~;
#X obj 177 204 swap;
#X obj 177 228 /;
#X obj 49 201 * 1000;
#X obj 38 115 t f b f;
#X msg 173 92 resize \$1;
#X obj 173 116 s \$0-hann;
#X msg 382 130 0;
#X obj 330 131 t f b;
#X text 15 8 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec).;
#X obj 37 88 r \$0-window-size;
#X obj 330 105 r \$0-window-hz;
#X obj 177 252 s \$0-window-hz;
#X obj 48 228 s \$0-window-msec;
#X obj 38 251 s \$0-window-sec;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 9 0;
#X connect 5 0 20 0;
#X connect 6 0 5 1;
#X connect 6 0 7 1;
#X connect 7 0 8 0;
#X connect 7 1 8 1;
#X connect 8 0 18 0;
#X connect 9 0 19 0;
#X connect 10 0 5 0;
#X connect 10 0 7 0;
#X connect 10 1 6 0;
#X connect 10 2 11 0;
#X connect 11 0 12 0;
#X connect 13 0 1 1;
#X connect 14 0 1 0;
#X connect 14 1 4 0;
#X connect 14 1 13 0;
#X connect 16 0 10 0;
#X connect 17 0 14 0;
#X restore 440 528 pd hann-window;
#N canvas 388 86 722 475 insample 0;
#N canvas 0 0 450 300 graph1 0;
#X array \$0-sample-r 167060 float 0;
#X coords 0 1 167059 -1 400 150 1;
#X restore 277 187 graph;
#X obj 28 184 unpack s f;
#X obj 28 294 soundfiler;
#X text 358 355 read a sample;
#X obj 281 355 loadbang;
#X obj 83 156 44100;
#X obj 28 157 t a b;
#X obj 38 318 s \$0-samplength;
#X obj 125 184 s \$0-insamprate;
#X obj 28 357 /;
#X obj 28 381 * 1000;
#X obj 28 404 s \$0-samp-msec;
#X obj 66 357 r \$0-insamprate;
#X obj 29 70 hip~ 5;
#X obj 29 46 adc~ 1;
#X obj 29 9 inlet;
#X obj 91 46 samplerate~;
#X obj 29 93 tabwrite~ \$0-sample;
#X obj 91 70 s \$0-insamprate;
#X msg 281 384 ../soud/voice.wav;
#X obj 281 414 s \$0-read-sample;
#X obj 28 133 r \$0-read-sample;
#X msg 28 270 read -resize \$1 \$2 \$3;
#X obj 28 245 pack s s s;
#X obj 28 210 t s b b;
#X obj 100 212 symbol \$0-sample-l;
#N canvas 0 0 450 300 graph1 0;
#X array \$0-sample-l 167060 float 0;
#X coords 0 1 167059 -1 400 150 1;
#X restore 276 19 graph;
#X obj 120 231 symbol \$0-sample-r;
#X connect 1 0 24 0;
#X connect 1 1 8 0;
#X connect 2 0 7 0;
#X connect 2 0 9 0;
#X connect 4 0 19 0;
#X connect 5 0 8 0;
#X connect 6 0 1 0;
#X connect 6 1 5 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 12 0 9 1;
#X connect 13 0 17 0;
#X connect 14 0 13 0;
#X connect 15 0 16 0;
#X connect 15 0 14 0;
#X connect 16 0 18 0;
#X connect 19 0 20 0;
#X connect 21 0 6 0;
#X connect 22 0 2 0;
#X connect 23 0 22 0;
#X connect 24 0 23 0;
#X connect 24 1 25 0;
#X connect 24 2 27 0;
#X connect 25 0 23 1;
#X connect 27 0 23 2;
#X restore 441 480 pd insample;
#X floatatom 552 480 5 0 0 0 - #0-samp-msec -;
#X msg 229 486 ../sound/bell.aiff;
#X msg 229 511 ../sound/voice.wav;
#X msg 229 536 ../sound/voice2.wav;
#X obj 441 459 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 460 458 <- record;
#X obj 493 387 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 0
1;
#X obj 262 386 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X msg 361 336 200;
#X msg 361 358 100;
#X msg 361 380 20;
#X text 402 335 contract;
#X text 406 380 expand;
#X text 494 277 detune;
#X text 55 330 location;
#X text 52 346 (stops;
#X text 57 361 motion);
#X text 165 348 motion in;
#X text 232 464 read input sound;
#X text 103 7 PHASE VOCODER FOR TIME STETCHING AND CONTRACTION;
#X text 604 479 length \, msec;
#X floatatom 607 419 5 0 0 0 - #0-window-size -;
#X msg 607 307 512;
#X msg 607 329 1024;
#X msg 607 351 2048;
#X msg 607 373 4096;
#X text 607 274 window size \,;
#X text 607 289 samples;
#X text 648 306 <- set;
#X text 100 306 ------- location controls -------;
#X text 660 419 (check);
#X text 23 35 This patch takes a sound \, analyzes windows in it both
for channel magnitude and for phase precession in each channel (compared
to another operlapping window). The real-time output recreates the
same magnitudes and phase precession \, althought the phases themselves
are in general different. You can control either the location or its
motion (setting location stops motion \, while setting a non-zero motion
causes the location to change automatically). "Rewind" goes back to
the beginning. You can use different window sizes (use the message
boxes - the number box is for readout). The "lock" feature forces phase
coherency between neighboring channels \, which makes a more present
sound but can add artifacts to the sound. Look in "pd fft-analysis"
to see the workings.;
#X text 483 568 updated for Pd version 0.39;
#X obj 551 316 bng 15 250 50 0 \$0-no-detune empty empty 0 -6 0 8 -262144
-1 -1;
#X obj 229 562 s \$0-read-sample;
#X obj 607 395 s \$0-window-size;
#X obj 493 407 s \$0-lock;
#X obj 494 338 s \$0-transpo;
#X obj 361 407 s \$0-auto;
#X obj 262 408 s \$0-rewind;
#X obj 167 407 s \$0-speed;
#X obj 55 407 s \$0-location;
#N canvas 341 120 909 781 fft-analysis 1;
#X obj 51 477 *~;
#X obj 18 477 *~;
#X obj 18 499 -~;
#X obj 167 475 *~;
#X obj 136 475 *~;
#X obj 136 497 +~;
#X obj 109 193 *~;
#X obj 78 193 *~;
#X obj 50 193 *~;
#X obj 19 193 *~;
#X obj 19 218 +~;
#X obj 127 379 *~;
#X obj 20 622 *~;
#X obj 238 430 rfft~;
#X obj 108 161 rfft~;
#X obj 19 564 rifft~;
#X obj 21 646 outlet~;
#X obj 97 379 *~;
#X obj 97 401 +~;
#X obj 124 218 -~;
#X obj 18 431 *~;
#X obj 51 432 *~;
#X obj 426 644 block~;
#X obj 19 349 +~ 1e-015;
#X obj 19 598 *~;
#X obj 52 598 tabreceive~ \$0-hann;
#X obj 126 641 expr 2/(3*$f1);
#X obj 637 550 loadbang;
#X msg 426 619 set \$1 4;
#X obj 97 425 q8_rsqrt~;
#X text 272 5 recall previous output amplitude. Its phase will be added
to the phase difference we measure from two windows in the the recorded
sound.;
#X obj 121 69 *~;
#X obj 89 69 *~;
#X obj 89 91 +~;
#X obj 159 94 q8_rsqrt~;
#X obj 159 71 +~ 1e-020;
#X obj 73 119 *~;
#X obj 19 118 *~;
#X obj 29 245 lrshift~ 1;
#X obj 24 269 lrshift~ -1;
#X obj 141 245 lrshift~ 1;
#X obj 133 269 lrshift~ -1;
#X obj 35 300 *~;
#X obj 159 312 *~;
#X obj 19 325 +~;
#X obj 125 331 +~;
#X text 247 66 divide by the magnitude to make a unit-magnitude complex
amplitude (phase only). The 1e-020 is to prevent overflows. q8_rsqrt~
is reciprocal square root.;
#X text 247 165 Take FT of the window in back. Multiply its conjugate
by the normalized previous output. The result has the magnitude of
the input sound and phase (previous output phase) minus (back window
phase).;
#X text 249 370 Normalize again \, this time taking care to salt each
channel with 1e-015 so that we get a unit complex number even if everything
was zero heretofore.;
#X text 287 423 Now take the FT of the forward window and multiply
it by the unit complex number from above. The magnitude will be that
of the forward window and the phase will be the previous output phase
plus the phase difference between the two analysis windows -- except
that if "lock" is on \, they will be modified to agree progressively
better with the inter-channel phase relationships of the input.;
#X text 249 242 If "lock" is on \, encourage neighboring channels to
stay in phase by adding the two neighboring complex amplitudes. The
result will tend toward the channel with the strongest amplitude. If
the phase relationships between channels in the output and those in
the input are in parallel \, then neighboring channels of the quotient
will all have the same phase and this will not change any phases. (lrshift
shifts the signal to the left or right depending on its argument.)
;
#X text 387 560 'set' message to block;
#X text 390 577 allows variable size;
#X text 259 126 Read two windows \, one 1/4 length behind the other
\, of the input sound \, with Hann window function (see inside).;
#X obj 426 595 r \$0-window-size;
#X obj 637 584 t b b b;
#X msg 693 609 2048;
#X obj 693 633 s \$0-window-size;
#X msg 654 631 0;
#X obj 654 657 s \$0-transpo;
#X msg 582 655 bang;
#X obj 582 681 s \$0-rewind;
#X obj 127 622 r \$0-window-size;
#X obj 181 290 r \$0-lock;
#X obj 73 29 tabreceive~ \$0-prev-imag;
#X obj 137 543 tabsend~ \$0-prev-imag;
#X obj 136 567 tabsend~ \$0-prev-real;
#X obj 20 8 tabreceive~ \$0-prev-real;
#N canvas 139 105 1078 871 read-windows 1;
#X obj 18 693 *~;
#X obj 156 300 f;
#X obj 102 139 /;
#X obj 195 695 *~;
#X obj 156 255 bang~;
#X obj 17 551 line~;
#X obj 102 164 * 1000;
#X obj 198 302 +;
#X obj 288 272 *;
#X obj 183 470 +;
#X obj 143 446 t f f;
#X msg 17 523 \$1 \, \$2 \$3;
#X obj 17 496 pack 0 0 0;
#X obj 178 371 / 1000;
#X obj 156 394 *;
#X text 188 394 reading location (samples);
#X obj 60 597 / 4;
#X obj 288 245 * 0.01;
#X floatatom 340 498 7 0 0 0 - - -;
#X obj 340 474 *;
#X obj 499 387 * 0.01;
#X obj 501 408 + 69;
#X obj 502 429 mtof;
#X obj 502 451 / 440;
#X obj 375 474 t b f;
#X obj 19 719 outlet~;
#X obj 195 720 outlet~;
#X obj 218 664 tabreceive~ \$0-hann;
#X msg 803 409 0;
#X msg 789 548 set \$1;
#X text 323 517 stretched window size (samples);
#X msg 911 548 set \$1;
#X msg 826 278 set \$1;
#X obj 808 140 t b f;
#X obj 826 257 f;
#X obj 754 171 int;
#X obj 754 203 sel 0;
#X msg 813 174 1;
#X msg 813 197 0;
#X obj 178 347 r \$0-insamprate;
#X floatatom 111 187 5 0 0 0 - - -;
#X obj 102 115 t f b;
#X obj 142 139 samplerate~;
#X obj 102 208 / 4;
#X obj 193 420 / 2;
#X obj 156 420 -;
#X text 229 417 back up 1/2 window;
#X text 43 6 Read two windows out of the recorded sample \, one 1/4
ahead of the other. The mid point of the front window is specified
by "location". If "speed" is nonzero \, "location" automatically precesses.
;
#X obj 611 618 * -0.5;
#X text 91 587 "back" window 1/4 cycle behind "front" one;
#X text 137 205 computation period (msec) for overlap of 4;
#X text 164 186 msec in a window;
#X obj 611 564 /;
#X obj 611 589 * 1000;
#X obj 611 540 t f b;
#X obj 651 564 samplerate~;
#X obj 611 517 f;
#X text 326 275 loop to precess the location according;
#X text 325 291 to the "speed" parameter.;
#X text 611 31 if location changes \, update number box;
#X text 610 50 in main window via "location-set" \, but;
#X text 613 69 taking care to limit frequency of updates.;
#X text 790 477 reflect control changes;
#X text 790 494 in main window.;
#X text 754 344 setting location by hand;
#X text 752 362 sets speed to zero.;
#X text 760 653 misc controls;
#X text 579 425 "rewind" control takes us;
#X text 582 443 to a location depending on;
#X text 582 462 stretched window size.;
#X obj 754 229 del 30;
#X obj 288 223 r \$0-speed;
#X obj 178 276 r \$0-location;
#X obj 340 448 r \$0-window-size;
#X obj 499 365 r \$0-transpo;
#X obj 611 484 r \$0-rewind;
#X obj 102 91 r \$0-window-size;
#X obj 610 647 s \$0-location;
#X obj 730 685 r \$0-no-detune;
#X msg 730 710 0;
#X obj 862 673 r \$0-auto;
#X obj 862 700 t f b;
#X obj 897 728 s \$0-rewind;
#X obj 862 754 s \$0-speed;
#X obj 911 522 r \$0-transpo;
#X obj 789 524 r \$0-speed;
#X obj 789 573 s \$0-speed-set;
#X obj 911 573 s \$0-transpo-set;
#X obj 803 432 s \$0-speed;
#X obj 803 386 r \$0-location;
#X obj 826 302 s \$0-location-set;
#X obj 808 94 r \$0-location;
#X obj 817 116 r \$0-see-loc;
#X obj 233 306 s \$0-see-loc;
#X obj 223 562 r \$0-usesample;
#X msg 196 611 set \$1;
#X obj 16 597 -~;
#X obj 731 739 s \$0-transpo;
#X obj 17 637 tabread4~ \$0-sample-l;
#X obj 194 637 tabread4~ \$0-sample-l;
#X obj 301 757 *~;
#X obj 478 759 *~;
#X obj 302 783 outlet~;
#X obj 478 784 outlet~;
#X obj 501 728 tabreceive~ \$0-hann;
#X obj 300 701 tabread4~ \$0-sample-r;
#X obj 477 701 tabread4~ \$0-sample-r;
#X connect 0 0 25 0;
#X connect 1 0 7 0;
#X connect 1 0 14 0;
#X connect 2 0 6 0;
#X connect 3 0 26 0;
#X connect 4 0 1 0;
#X connect 5 0 96 0;
#X connect 5 0 99 0;
#X connect 5 0 106 0;
#X connect 6 0 40 0;
#X connect 6 0 43 0;
#X connect 7 0 1 1;
#X connect 7 0 93 0;
#X connect 8 0 7 1;
#X connect 9 0 12 1;
#X connect 10 0 12 0;
#X connect 10 1 9 0;
#X connect 11 0 5 0;
#X connect 12 0 11 0;
#X connect 13 0 14 1;
#X connect 14 0 45 0;
#X connect 16 0 96 1;
#X connect 17 0 8 0;
#X connect 18 0 16 0;
#X connect 18 0 9 1;
#X connect 18 0 44 0;
#X connect 18 0 56 1;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 24 0;
#X connect 24 0 19 0;
#X connect 24 1 19 1;
#X connect 27 0 3 1;
#X connect 27 0 0 1;
#X connect 28 0 88 0;
#X connect 29 0 86 0;
#X connect 31 0 87 0;
#X connect 32 0 90 0;
#X connect 33 0 35 0;
#X connect 33 1 34 1;
#X connect 34 0 32 0;
#X connect 35 0 36 0;
#X connect 36 0 37 0;
#X connect 36 0 70 0;
#X connect 37 0 35 1;
#X connect 38 0 35 1;
#X connect 39 0 13 0;
#X connect 41 0 2 0;
#X connect 41 1 42 0;
#X connect 42 0 2 1;
#X connect 43 0 12 2;
#X connect 43 0 8 1;
#X connect 44 0 45 1;
#X connect 45 0 10 0;
#X connect 48 0 77 0;
#X connect 52 0 53 0;
#X connect 53 0 48 0;
#X connect 54 0 52 0;
#X connect 54 1 55 0;
#X connect 55 0 52 1;
#X connect 56 0 54 0;
#X connect 70 0 38 0;
#X connect 70 0 34 0;
#X connect 71 0 17 0;
#X connect 72 0 1 1;
#X connect 73 0 19 0;
#X connect 74 0 20 0;
#X connect 75 0 56 0;
#X connect 76 0 41 0;
#X connect 78 0 79 0;
#X connect 79 0 97 0;
#X connect 80 0 81 0;
#X connect 81 0 83 0;
#X connect 81 1 82 0;
#X connect 84 0 31 0;
#X connect 85 0 29 0;
#X connect 89 0 28 0;
#X connect 91 0 33 0;
#X connect 92 0 33 0;
#X connect 94 0 95 0;
#X connect 95 0 98 0;
#X connect 95 0 99 0;
#X connect 95 0 105 0;
#X connect 95 0 106 0;
#X connect 96 0 98 0;
#X connect 96 0 105 0;
#X connect 98 0 0 0;
#X connect 99 0 3 0;
#X connect 100 0 102 0;
#X connect 101 0 103 0;
#X connect 104 0 101 1;
#X connect 104 0 100 1;
#X connect 105 0 100 0;
#X connect 106 0 101 0;
#X restore 109 133 pd read-windows;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 15 0;
#X connect 2 0 66 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 15 1;
#X connect 5 0 65 0;
#X connect 6 0 19 1;
#X connect 7 0 19 0;
#X connect 8 0 10 1;
#X connect 9 0 10 0;
#X connect 10 0 39 0;
#X connect 10 0 38 0;
#X connect 10 0 44 0;
#X connect 11 0 18 1;
#X connect 12 0 16 0;
#X connect 13 0 1 1;
#X connect 13 0 3 1;
#X connect 13 1 0 1;
#X connect 13 1 4 1;
#X connect 14 0 9 1;
#X connect 14 0 7 1;
#X connect 14 1 6 1;
#X connect 14 1 8 1;
#X connect 15 0 24 0;
#X connect 17 0 18 0;
#X connect 18 0 29 0;
#X connect 19 0 40 0;
#X connect 19 0 41 0;
#X connect 19 0 45 0;
#X connect 20 0 1 0;
#X connect 20 0 4 0;
#X connect 21 0 0 0;
#X connect 21 0 3 0;
#X connect 23 0 17 1;
#X connect 23 0 17 0;
#X connect 23 0 20 0;
#X connect 24 0 12 0;
#X connect 25 0 24 1;
#X connect 26 0 12 1;
#X connect 27 0 55 0;
#X connect 28 0 22 0;
#X connect 29 0 20 1;
#X connect 29 0 21 1;
#X connect 31 0 33 1;
#X connect 32 0 33 0;
#X connect 33 0 35 0;
#X connect 34 0 36 1;
#X connect 34 0 37 1;
#X connect 35 0 34 0;
#X connect 36 0 8 0;
#X connect 36 0 7 0;
#X connect 37 0 9 0;
#X connect 37 0 6 0;
#X connect 38 0 42 0;
#X connect 39 0 42 0;
#X connect 40 0 43 0;
#X connect 41 0 43 0;
#X connect 42 0 44 1;
#X connect 43 0 45 1;
#X connect 44 0 23 0;
#X connect 45 0 11 0;
#X connect 45 0 11 1;
#X connect 45 0 21 0;
#X connect 54 0 28 0;
#X connect 55 0 60 0;
#X connect 55 1 58 0;
#X connect 55 2 56 0;
#X connect 56 0 57 0;
#X connect 58 0 59 0;
#X connect 60 0 61 0;
#X connect 62 0 26 0;
#X connect 63 0 42 1;
#X connect 63 0 43 1;
#X connect 64 0 31 1;
#X connect 64 0 31 0;
#X connect 64 0 36 0;
#X connect 67 0 32 1;
#X connect 67 0 32 0;
#X connect 67 0 37 0;
#X connect 68 0 14 0;
#X connect 68 1 13 0;
#X restore 19 479 pd fft-analysis;
#X obj 89 620 s \$0-usesample;
#X obj 89 562 loadbang;
#X obj 89 591 symbol \$0-sample;
#X msg 185 438 d:/music/samples/godspeed/guitarnotes.wav;
#N canvas 260 23 655 776 phase-tables 0;
#N canvas 0 0 450 300 graph2 0;
#X array \$0-prev-imag 4096 float 0;
#X coords 0 1000 4096 -1000 400 300 1;
#X restore 169 326 graph;
#N canvas 0 0 450 300 graph3 0;
#X array \$0-prev-real 4096 float 0;
#X coords 0 500 4096 -500 400 300 1;
#X restore 170 17 graph;
#X restore 440 504 pd phase-tables;
#X obj 20 513 outlet~;
#X obj 602 34 inlet;
#X obj 597 72 route read;
#X connect 0 0 45 0;
#X connect 1 0 48 0;
#X connect 2 0 49 0;
#X connect 9 0 42 0;
#X connect 10 0 42 0;
#X connect 11 0 42 0;
#X connect 12 0 7 0;
#X connect 14 0 44 0;
#X connect 15 0 47 0;
#X connect 16 0 46 0;
#X connect 17 0 46 0;
#X connect 18 0 46 0;
#X connect 30 0 43 0;
#X connect 31 0 43 0;
#X connect 32 0 43 0;
#X connect 33 0 43 0;
#X connect 50 0 56 0;
#X connect 52 0 53 0;
#X connect 53 0 51 0;
#X connect 54 0 42 0;
#X connect 57 0 58 0;

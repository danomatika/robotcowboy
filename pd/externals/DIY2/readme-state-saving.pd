#N canvas 98 73 1093 622 10;
#X text 605 120 <-- essential for patch-based state saving;
#X obj 524 151 808_globaltext;
#X text 628 149 saves ALL [808_state]/[sssad] data to a textfile.;
#X obj 531 282 808_local /keyname;
#X obj 649 360 diy-slider /keyname/slider1;
#X text 763 457 saves local [808_state]/[sssad] data to a textfile.
;
#X text 648 289 saves any [808_state]/[sssad] data with an accompanying
keyname to a messagebox in the [pd datastore] subpatch. the keyname
must begin with / \, and accompanying abstractions should use that
keyname \, followed by a / \, and then an individual identifier...for
example:;
#X obj 33 158 808_state keyname;
#X msg 33 190 saved data will be output here when 'load' is triggered.
;
#X obj 36 15 cnv 15 160 20 empty empty about-state-saving 5 10 0 14
-1 -262144 0;
#X text 43 42 the DIY library uses a modified (simplified?) version
of the sssad state-saving abstraction \, originally created by frank
barknecht. this modified patch is named [808_state] \, and works like
this:;
#X text 36 226 currently \, the left inlet is not used in any DIY patches
\, but is inlcuded as it was part of the original [sssad] patch.;
#X obj 39 459 mono-bitcrusher some-name-here;
#X obj 39 533 mono-vcf a-different-name-here;
#X text 41 387 All DIY patches take a creation argument to set the
keyname for this load/save system. These names need to be unique. 2
abstractions with the same keyname will cause conflicts when loading/saving.
;
#X obj 524 57 808_global;
#X text 38 275 actually \, the [808_state] system uses the same [send]
and [recieve] objects as the [sssad] system. so [sssad]-based patches
(such as the s-abstractions collection) and all [sssad] and [808_state]
data will be saved in the same file.;
#X obj 528 249 cnv 15 110 20 empty empty local-saving 5 10 0 14 -1
-262144 0;
#X obj 523 17 cnv 15 117 20 empty empty global-saving 5 10 0 14 -1
-262144 0;
#N canvas 194 37 450 300 savedata 0;
#X msg 10 30;
#X obj 10 10 inlet;
#X msg 68 6 set;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X restore 531 345 pd savedata;
#X obj 623 448 808_localtext /keyname;
#N canvas 194 37 431 437 savedata 0;
#X msg 10 30 SSSAD \$1/controls 0 0.4 1 0.3 2 0.4 3 0.49 \; SSSAD a-different-name-here/controls
0 0.49 1 0.49 2 0.49 \; SSSAD some-name-here/controls 0 1 1 1 2 0.49
\; SSSAD /keyname/slider1/slider 0 \; SSSAD a-different-name-here/controls
0 0.49 1 0.49 2 0.49 \; SSSAD some-name-here/controls 0 1 1 1 2 0.49
\; SSSAD /keyname/slider1/slider 0 \;;
#X obj 10 10 inlet;
#X msg 62 7 set;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X restore 525 122 pd savedata;
#X text 649 400 don't forget to save the enclosing patch after saving
to the savedata subpatch.;
#X msg 132 111 input a symbol float or list and it will be saved to
a message box or textfile by one of the file managers listed to the
right->;
#X text 623 54 saves ALL [808_state]/[sssad] data to a messagebox in
the [pd datastore] subpatch. this is a global save \, which means that
ANY [808_state]/[sssad] based abstraction opened in pd will be saved.
;
#X text 784 486 (same system as the above patch);
#X text 541 554 the [diy-makeobjects] patch creates objects with '/key'
as their creation argument. this should be changed to a unique identifier
for state saving purposes.;
#X connect 3 0 19 0;
#X connect 7 0 8 0;
#X connect 12 0 13 0;
#X connect 15 0 21 0;
#X connect 23 0 7 1;
